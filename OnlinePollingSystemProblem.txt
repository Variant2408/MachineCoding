Problem Statement 
You are required to design and implement an online polling system. The system should allow users to create, manage, and participate in polls.
Each poll consists of a question and multiple options for answers. Users can vote on polls and view the results.

Requirements 
1. Create Polls: 
  Users should be able to create a new poll with a question and multiple answer options. - 
  Each poll must have a unique identifier, a question, a list of options, and a timestamp of creation. 

2. Manage Polls:
    Users should be able to update the question or options of an existing
    USers should able to delete poll.
3. Vote in Polls: 
    - Users should be able to cast a vote for one of the options in a poll. 
    - Each user can only vote once per poll. 

4. View Poll Results: 
   Users should be able to view the current results of a poll, including the number of votes for each option. 

5. Poll Data: 
    - Store polls, options, and votes in a way that allows efficient retrieval and updates. 
     Ensure data integrity and consistency, especially when multiple users are voting simultaneously.

Implementation Details Functions/Methods: 

1. createPoll: - Input: question (string), options (array of strings) 
                 Output: pollid (string), message (string) 
                 Example: createPoll("What is your favorite color?", ["Red", "Blue", "Green", "Yellow"]) 
                              returns {"pollId": "123", "message": "Poll created successfully."} 
2. updatePoll: - Input: pollid (string), question (string), options (array of strings)
                 Output: message (string) 
                - Example: updatePoll("123", "Updated question?", ["Option1", "Option2"])
                          returns {"message": "Poll updated successfully."} 
3. deletePoll: - Input: pollid (string) 
                Output: message (string) 
               - Example: deletePoll("123") 
                returns {"message": "Poll deleted successfully."}
4. VoteIn Poll:
               Input: pollid (string), userld (string), option (string) 
               Output: message (string) Example: voteInPoll("123", "user1", "Option1") 
                     returns {"message": "Vote cast successfully."} 
5. viewPollResults: - Input: pollid (string) - 
                      Output: pollid (string), question (string), results (object with option keys and vote count values) 
                   Example: viewPollResults("123") returns {"pollId": "123", "question": "What is your favorite color?", "results": {"Red": 10, "Blue": 5, "Green": 3, "Yellow": 2}} 

Data Models Poll: { "pollId": "123", "question": "What is your favorite color?", "options": ["Red", "Blue", "Green", "Yellow"], "createdAt": "2024-07-11T00:00:00Z" }
Vote: { "pollId": "123", "userId": "user1", "option": "Red", "timestamp": "2024-07-11T01:00:00Z" }

Evaluation
   Criteria Correctness and completeness of the implemented functionalities.
   Code quality, readability, and maintainability.
   Efficient handling of data and concurrency (optional) Proper error handling and validation.


